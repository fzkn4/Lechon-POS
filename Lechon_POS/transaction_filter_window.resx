<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="guna2BorderlessForm1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="resource.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAA00lEQVRIS2MYBaNgCINfZ2Tyfp+RcoNysYLfZ6Rrf52WMYNySQMgjUADXvw+K+MBFUIBQLme32el
        T/0/o8QPFSId/DojZQT0xfM/Z6V8oUJgADS8DYjP/j8mIwQVIh+gW0JVw2EAHlxnpFeDg+W8ggBUinrg
        12npxUAL/v85Kx0GFaIegAXL73PSztjihCIAMxwW5rginiyAbjgMUMWS32dkKoCGn8SVzn+dkjUFyr/4
        dVbSGCpEGvh5TkLr/wkhPigXK/hxUlqNqsl1FIwCLICBAQDsHYUp/F6swQAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="close.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAAy0lEQVRIS2MYBaNgCIPK4Ii8ipBwNygXK6gIiaitDo0yg3JJAyCNlSERLypCIz2gQigAaHlPZWjE
        qfLQUH6oEOmgKijcCGjJ8+rgSF+oEBhUhUS0AQ0/2xAaKgQVIh+gW0JVw2EAFlxAvBoULA0BCQJQKeoB
        YIQuBlrwvyo4MgwqRD0ACxYg7YwtTigC6GGOK+LJArgilCqWVIaGVwANOYkrnVcEhZsC5YH5JMoYKkQa
        qAwN1WqIjuaDcrGCyvBwNaom11EwCrAABgYAyVJbVd2JlcQAAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJjb/wDp//8BZqPpJVOH039JdsTVQmq4/T9f
        rf8+Xar/Q2Ow/0pwvP9Sg9D/V5Pi7Vmb66dZm+xIYZzjCVqa6ADuv5MAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPv//wBUiNIAaqLiDkhyu243VaXXLEGW/Sc2
        jv8mMo3/JS+K/yYwjP8lMIv/KDSO/y06kf84TJ3/Sm25/1aN2+9YmuujWpzsLv///wBqqO4AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACkxesAK0eSAExqrSEySZOpJTSF+yEr
        gv8gLIH/GyR3/xwoev8WJXX/Gih6/xQdcP8dJnz/Gyd6/x8rf/8iLH//LjyI/0VrtP9QidjdVJDfWG6T
        1ANhkdkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhr7nABMiZwA7VZEwJT+CxR06
        g/8eQIv/H0uU/yFcpP8iZa7/IWOr/yJqsv8iZKv/HlKZ/xk6gP8eV5//JGy2/yRgqP8iXKb/H0iO/y9k
        qv84arTvQHG5ZnaQyQJVgsUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANX6/wAuRIkARV+fKCM6
        fcsiZaz/Imeu/yVttP8kcbj/G0uN/ymK1/8qitf/I2+4/yd8x/8smOf/HFWY/yFor/8qi9n/JXO7/yiE
        0P8ld8H/I262/yFcof8zbbfsT4PPTjlqvABpnN0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUHGyAFp/
        vBErO4ayHTJ+/yNutv8fYqj/KIDL/ymL2P8pf8r/J33I/yqF0f8rlOP/Ko7b/y2e7v8dV5v/Imqy/yZ+
        yf8kc7v/J4LO/yRxuf8kcLj/KITP/yphqP9OhtbQXJ/tIViY6AAAAAAAAAAAAAAAAAAAAAAAAAAAAISv
        5AAAAAAANEqOcyIsgfwcLXz/HlOb/xtIjv8fXaX/HE+W/yNlr/8eUZv/HU6X/x1Vof8dTJb/HU6d/xo2
        g/8bRpb/HlKc/xpFjf8dS5T/G0mQ/x1Rlv8iZ7D/IEqU/z9pt/9WmOmJqbrDAWWc4AAAAAAAAAAAAAAA
        AAAAAAAATGmqAFBvriAlM3zYIEOQ/xk4fv8aPoT/G0OJ/xxIjv8bS5T/HEaM/xpGkf8ZO4T/GDuJ/xpE
        j/8ZOYn/GC59/xUtfv8bR5H/FzuE/xk9hf8XO4H/HU+V/xQsbv8aNHz/J0mT/0qC0d9dnOomWZflAAAA
        AAAAAAAAAAAAAJPC8QAKDlgAOFCTbB4pdv4lcr7/LJ3t/yqS4f8lcbr/K5Pi/yRyu/8ph9T/Jn7J/x1T
        l/8kcrv/J4TQ/yV3wf8oiNX/JnzI/ymM2v8phNH/J4TQ/yZ7xf8kdLz/JHa//yiH1P8lecT/Omaw/1qa
        62pOkusAh6/bAAAAAAAAAAAAbJjYAIjC8wcvQYqzHip7/yZ8yf8qk+H/Kpbk/x9fpP8sm+v/GECF/yiK
        2P8ibbb/JoDM/ymK1/8qkN3/KIbS/yyi8/8piNX/KpHe/yR2wP8oidb/KY3a/yuU4v8ngMv/LaLz/yaA
        zP8tT5f/VpbnqH+t3ANsoN8AAAAAAAAAAABXfLkAUnewHio5iN4fKX//Gj+H/xQtcf8bQYv/FS13/x1J
        mP8THn7/HEGY/xcviP8ZPYz/HE+a/x1Ik/8cRZz/HEST/xo8jP8dSZT/GDyH/xk/h/8YPor/HlSf/xYy
        dv8bQof/Gz2H/yg/jf9Rjd3NY6LuEWGa5AAAAAAAAAAAAEZioQBHZKE3KDaI8R0nef8cTpb/IGKs/xgw
        d/8eUqD/GzKE/xITff8ZNYz/Fi6F/yFmtv8ibbv/IF+s/xYriv8ZLYL/HlWl/x1Klf8dU6D/IGKu/xUp
        fP8YIXH/Hleg/x5Wnf8ZI3H/KDiO/0uD0+Bgo/IfXJrnAAAAAAAAAAAAO1KRAEJcmkcnNIj5HCl5/yaH
        1P8tqPr/GkuN/yiM2f8dTpX/HVWi/ymN2/8aSo3/LKHy/yud7f8lecP/KYzb/xpGif8qkd7/JXS9/yyg
        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
        AB/8AAAf/AAAH/wAQD/8AGH//5hx//+Z8f8=
</value>
  </data>
</root>